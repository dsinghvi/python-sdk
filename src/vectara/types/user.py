# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .api_policy import ApiPolicy
from .api_role import ApiRole


class User(pydantic_v1.BaseModel):
    id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The Vectara ID for the user.
    """

    email: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The email address for the user.
    """

    username: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The username for the user.
    """

    enabled: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    Indicates whether the user is enabled or disabled.
    """

    description: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The description for the user.
    """

    created_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    When the user was created.
    """

    updated_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    When a user property was last updated.
    """

    api_roles: typing.Optional[typing.List[ApiRole]] = pydantic_v1.Field(default=None)
    """
    The role names of the user.
    """

    api_policy: typing.Optional[ApiPolicy] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
