# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class ContextConfiguration(pydantic_v1.BaseModel):
    """
    Configuration on the presentation of each document part in the result set.
    """

    characters_before: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The number of characters before the matching document part that are shown.
    This is useful to show the context of the document part in the wider document.
    Ignored if `sentences_before` is set.
    Vectara will capture the full sentence that contains the captured characters,
    so as to not lose the meaning caused by a truncated word or sentence.
    """

    characters_after: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The number of characters after the matching document part that are shown.
    This is useful to show the context of the document part in the wider document.
    Ignored if `sentences_after` is set.
    Vectara will capture the full sentence that contains the captured characters,
    so as to not lose the meaning caused by a truncated word or sentence.
    """

    sentences_before: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The number of sentences before the matching document part that are shown.
    This is useful to show the context of the document part in the wider document.
    """

    sentences_after: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The number of sentences after the matching document part that are shown.
    This is useful to show the context of the document part in the wider document.
    """

    start_tag: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The tag that wraps the document part at the start. This is often used to
    provide a start HTML/XML tag or some other delimiter you can use in an
    application to understand where to provide highlighting in your UI and
    understand where the context before ends and the document part begins.
    """

    end_tag: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The tag that wraps the document part at the end. This is often used to
    provide a start HTML/XML tag or some other delimiter you can use in an
    application to understand where to provide highlighting in your UI and
    understand where the context before ends and the document part begins.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
