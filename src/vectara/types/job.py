# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .corpus_key import CorpusKey
from .job_state import JobState
from .job_type import JobType


class Job(pydantic_v1.BaseModel):
    id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The ID of the job.
    """

    type: typing.Optional[JobType] = pydantic_v1.Field(default=None)
    """
    The type of job.
    """

    corpus_keys: typing.Optional[typing.List[CorpusKey]] = pydantic_v1.Field(default=None)
    """
    The corpora that this job belongs to. It may not belong to any corpora.
    """

    state: typing.Optional[JobState] = None
    created_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    Specifies when the job was created.
    """

    started_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    Specifies when the job was started.
    """

    completed_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    Specifies when the job was completed.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
